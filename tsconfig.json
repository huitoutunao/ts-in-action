{
    "compilerOptions": {
      /* Basic Options */
      // "incremental": true,                   /* 增量编译，提高编译效率 */
      // "diagnostics": true,                   /* 打印诊断信息 */
      "target": "es5",                          /* 目标语言的版本 */
      "module": "commonjs",                     /* 生成代码的模块标准 */
      // "lib": [],                             /* TS 需要引用的库，即声明文件，es5 默认 "dom", "es5", "scripthost" */
      // "allowJs": true,                       /* 允许编译 JS 文件（.js、.jsx） */
      // "checkJs": true,                       /* 允许在 JS 文件中报错，通常与 allowJs 使用 */
      // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
      // "declaration": true,                   /* 生成声明文件 */
      // "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
      // "sourceMap": true,                     /* 生成 sourceMap 文件 */
      // "outFile": "./",                       /* 将多个相互依赖的文件生成一个文件，可以用在 AMD 模块中 */
      // "outDir": "./",                        /* 指定输出目录 */
      // "rootDir": "./",                       /* 指定输入文件目录 */
      // "composite": true,                     /* Enable project compilation */
      // "tsBuildInfoFile": "./",               /* 增量编译文件的储存位置 */
      // "removeComments": true,                /* 删除注释 */
      // "noEmit": true,                        /* 不输出文件 */
      // "importHelpers": true,                 /* 通过 tslib 引入 helper 函数，文件必须是模块 */
      // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
      // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
  
      /* Strict Type-Checking Options */
      "strict": true,                           /* 开启所有严格类型检查 */
      // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
      "strictNullChecks": true,              /* Enable strict null checks. */
      "strictFunctionTypes": true,           /* Enable strict checking of function types. */
      // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
      // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
      // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
      // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
  
      /* Additional Checks */
      // "noUnusedLocals": true,                /* 检查只声明，未使用的局部变量 */
      // "noUnusedParameters": true,            /* 检查未使用的函数参数 */
      // "noImplicitReturns": true,             /* 每个分支都要有返回值 */
      // "noFallthroughCasesInSwitch": true,    /* 防止 switch 语句贯穿 */
  
      /* Module Resolution Options */
      // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
      // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
      // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
      // "typeRoots": [],                       /* 声明文件目录 */
      // "types": [],                           /* 声明文件包 */
      // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
      "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
      // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
      // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */
  
      /* Source Map Options */
      // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
      // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
      // "inlineSourceMap": true,               /* 生成目标文件的 inline source map */
      // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
  
      /* Experimental Options */
      // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
      // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
    }
  }
  